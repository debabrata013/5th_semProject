<!DOCTYPE html>
<html lang="en">
<head>
    <%- include("./partials/link") %>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Home</title>
    <!-- Bootstrap CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <!-- Font Awesome for Icons -->
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.1.1/css/all.min.css" rel="stylesheet">
    <!-- Chart.js -->
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

    <style>
        body.dark-mode {
            background-color: #121212;
            color: #ffffff;
        }
        .dark-mode .bg-light {
            background-color: #1f1f1f !important;
        }
        .dark-mode .navbar-light .navbar-nav .nav-link {
            color: #ffffff;
        }
        .dark-mode .card {
            background-color: #1f1f1f;
            color: #ffffff;
        }
        .dark-mode .list-group-item {
            background-color: #1f1f1f;
            color: #ffffff;
        }
        .dark-mode .footer {
            background-color: #1f1f1f;
            color: #ffffff;
        }
        #wrapper {
            width: 100vw;
            height: 100vh;
            overflow-x: hidden;
        }
        #page-content-wrapper {
            width: 100%;
            padding: 20px;
        }
        .chart-container {
            position: relative;
            margin: auto;
            height: 250px;
            width: 100%;
        }
    </style>
</head>
<body>
    <!-- <link rel="stylesheet" href="css/core.css"> -->
     
    
    <!-- <%- include("./partials/link") %> -->
 
    <% if (user && user.role === 'ADMIN') { %>
        <%- include("./partials/admin_nav") %>
<div class="d-flex" id="wrapper">
    
    <div id="page-content-wrapper">
        

        <div class="container-fluid">
            <h1 class="mt-4">Dashboard</h1>
            <div class="row">
                <div class="col-lg-3 col-md-6">
                    <div class="card text-white bg-primary mb-3">
                        <div class="card-body">
                            <div class="card-title">Total Users</div>
                            <h3 id="totalUsers">0</h3> <!-- Added ID for dynamic updating -->
                        </div>
                    </div>
                </div>
                <div class="col-lg-3 col-md-6">
                    <div class="card text-white bg-success mb-3">
                        <div class="card-body">
                            <div class="card-title">Revenue</div>
                            <h3>0</h3> <!-- Placeholder for revenue -->
                        </div>
                    </div>
                </div>
                <div class="col-lg-3 col-md-6">
                    <div class="card text-white bg-warning mb-3">
                        <div class="card-body">
                            <div class="card-title">Tasks</div>
                            <h3>0</h3> <!-- Placeholder for tasks -->
                        </div>
                    </div>
                </div>
                <div class="col-lg-3 col-md-6">
                    <div class="card text-white bg-danger mb-3">
                        <div class="card-body">
                            <div class="card-title">Canceled</div>
                            <h3>0</h3> <!-- Placeholder for issues -->
                        </div>
                    </div>
                </div>
                
            </div>

            <!-- Statistical Data Graphs -->
            <div class="row">
                <div class="col-lg-6">
                    <div class="card mb-4">
                        <div class="card-body">
                            <h5 class="card-title">Revenue Over Time (Line Graph) per month </h5>
                            <div class="chart-container">
                                <canvas id="lineChart"></canvas>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-lg-6">
                    <div class="card mb-4">
                        <div class="card-body">
                            <h5 class="card-title">Confirm boocking vs Canceled (Pie Chart)</h5>
                            <div class="chart-container">
                                <canvas id="pieChart"></canvas>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-lg-12">
                    <div class="card mb-4">
                        <div class="card-body">
                            <h5 class="card-title">Canceled booking  Distribution (Histogram) per month</h5>
                            <div class="chart-container">
                                <canvas id="barChart"></canvas>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

        </div>
    </div>
</div>
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script>
    async function fetchStatistics() {
        try {
            const response = await fetch('/api/statistics');
            const data = await response.json();

            // Prepare data for the charts
            const months = data.monthlyRevenue.map(item => item._id);
            const monthlyRevenue = data.monthlyRevenue.map(item => item.totalRevenue);
            const confirmedCount = data.confirmed;
            const canceledCount = data.canceled;
            const canceledDistribution = data.canceledDistribution.map(item => item.count);
            const canceledMonths = data.canceledDistribution.map(item => item._id);

            // Line Chart - Revenue Over Time
            const lineChartCtx = document.getElementById('lineChart').getContext('2d');
            new Chart(lineChartCtx, {
                type: 'line',
                data: {
                    labels: months,
                    datasets: [{
                        label: 'Monthly Revenue',
                        data: monthlyRevenue,
                        borderColor: 'rgba(75, 192, 192, 1)',
                        backgroundColor: 'rgba(75, 192, 192, 0.2)',
                        borderWidth: 2,
                    }]
                },
                options: {
                    scales: {
                        y: {
                            beginAtZero: true,
                            title: {
                                display: true,
                                text: 'Revenue'
                            }
                        },
                        x: {
                            title: {
                                display: true,
                                text: 'Month'
                            }
                        }
                    }
                }
            });

            // Pie Chart - Confirmed vs Canceled
            const pieChartCtx = document.getElementById('pieChart').getContext('2d');
            new Chart(pieChartCtx, {
                type: 'pie',
                data: {
                    labels: ['Confirmed Bookings', 'Canceled Bookings'],
                    datasets: [{
                        data: [confirmedCount, canceledCount],
                        backgroundColor: ['rgba(54, 162, 235, 1)', 'rgba(255, 99, 132, 1)'],
                    }]
                },
                options: {
                    responsive: true,
                }
            });

            // Bar Chart - Canceled Booking Distribution
            const barChartCtx = document.getElementById('barChart').getContext('2d');
            new Chart(barChartCtx, {
                type: 'bar',
                data: {
                    labels: canceledMonths,
                    datasets: [{
                        label: 'Canceled Bookings',
                        data: canceledDistribution,
                        backgroundColor: 'rgba(255, 206, 86, 1)',
                    }]
                },
                options: {
                    scales: {
                        y: {
                            beginAtZero: true,
                            title: {
                                display: true,
                                text: 'Number of Canceled Bookings'
                            }
                        },
                        x: {
                            title: {
                                display: true,
                                text: 'Month'
                            }
                        }
                    }
                }
            });

        } catch (error) {
            console.error('Error fetching statistics:', error);
        }
    }

    // Call the function to fetch data and render charts
    fetchStatistics();
</script>

<script>
    document.addEventListener('DOMContentLoaded', function() {
        fetch('/api/statistics')
            .then(response => response.json())
            .then(stats => {
                // Update the total users count in the dashboard
                document.getElementById('totalUsers').innerText = stats.totalUsers;

                document.querySelector('.bg-success h3').innerText = stats.revenue; // Revenue
                document.querySelector('.bg-warning h3').innerText = stats.tasks; // Tasks
                document.querySelector('.bg-danger h3').innerText = stats.issues; // Issues

                // Existing chart code follows...
            })
            .catch(error => console.error('Error fetching data:', error));
    });
</script>
<!-- <script>
    document.addEventListener('DOMContentLoaded', function() {
    fetchDashboardStats();
});

async function fetchDashboardStats() {
    try {
        const response = await fetch('/api/statistics');
        if (!response.ok) {
            throw new Error('Network response was not ok');
        }
        const stats = await response.json();
        updateDashboardCards(stats);
    } catch (error) {
        console.error('Error fetching dashboard stats:', error);
    }
}

function updateDashboardCards(stats) {
    document.getElementById('totalUsers').innerText = data.totalUsers;

    document.querySelector('.bg-success h3').innerText = stats.revenue; // Revenue
    document.querySelector('.bg-warning h3').innerText = stats.tasks; // Tasks
    document.querySelector('.bg-danger h3').innerText = stats.issues; // Issues
}

</script> -->
<% }else if (user && user.role === 'USER'){ %>
    <%- include("./partials/nav") %>


    <section class="parking-map">
        <h2>Available Parking Slots</h2>
        <div id="map"> <!-- Placeholder for map --> </div>
    </section>
    <style>
        .parking-slots-container {
    display: flex;
    flex-wrap: wrap;
    justify-content: center;
}

.parking-slot {
    perspective: 1000px;
    width: 300px;  /* Increased width */
    height: 300px; /* Increased height */
    margin: 20px;
}

.card {
    position: relative;
    width: 100%;
    height: 100%;
    transition: transform 0.6s;
    transform-style: preserve-3d;
}

.parking-slot:hover .card {
    transform: rotateY(180deg);
}

.front, .back {
    position: absolute;
    width: 100%;
    height: 100%;
    backface-visibility: hidden;
    display: flex;
    flex-direction: column; /* Stack elements vertically */
    justify-content: center;
    align-items: center;
    border: 1px solid #ccc;
}

.car-image {
    width: 100%; /* Adjust image size */
    height: 100%;
    border-radius: 5px;
    /* height: auto; Maintain aspect ratio */
    /* margin-bottom: 10px; */
}

.back {
    transform: rotateY(180deg);
    display: flex;
    flex-direction: column; /* Stack back content vertically */
    justify-content: center;
    align-items: center;
}

    </style>
    <div class="parking-slots-container">
        <div class="parking-slot">
            <div class="card">
                <div class="front">
                    <img src="https://media.istockphoto.com/id/1137138429/photo/fantastic-car-isolated-on-white-3d-rendering.jpg?s=2048x2048&w=is&k=20&c=zK5A0GhcXJK-FKMUPIPnMMwNBOWOv0q_oEmU9xFQu9c=" alt="Car Slot 1" class="car-image">
                    <h3>Slot 1</h3>
                    <p>Available</p>
                </div>
                <div class="back">
                    <h3>Details</h3>
                    <p>Price: 10</p>
                    <p>Duration: 2 hours</p>
                </div>
            </div>
        </div>
        
        <div class="parking-slot">
            <div class="card">
                <div class="front">
                    <img src="https://media.istockphoto.com/id/164433121/vector/car-design-drawing.jpg?s=2048x2048&w=is&k=20&c=KPUwxN5Eqiwm3Blqbl6WJqm18oTNfl3pcZjbO06dD1g=" alt="Car Slot 2" class="car-image">
                    <h3>Slot 2</h3>
                    <p>Available</p>
                </div>
                <div class="back">
                    <h3>Details</h3>
                    <p>Price: 20</p>
                    <p>Duration: 3 hours</p>
                </div>
            </div>
        </div>
        
        <div class="parking-slot">
            <div class="card">
                <div class="front">
                    <img src="https://media.istockphoto.com/id/115751204/vector/red-car.jpg?s=2048x2048&w=is&k=20&c=yRZxTRjJRtq3i3PVYtSm5XQCYsz-s9Cwj-i2g9Y-U54=" alt="Car Slot 3" class="car-image">
                    <h3>Slot 3</h3>
                    <p>Available</p>
                </div>
                <div class="back">
                    <h3>Details</h3>
                    <p>Price: 8</p>
                    <p>Duration: 1 hour</p>
                </div>
            </div>
        </div>
        
        <div class="parking-slot">
            <div class="card">
                <div class="front">
                    <img src="https://media.istockphoto.com/id/1442490818/vector/rally-sports-car-in-black-and-red-colors-isolated-on-white-background-off-road-vehicle.jpg?s=2048x2048&w=is&k=20&c=kjTejvPJFKub90NenB8AZS9CRhMvcz4t4uGsi9wXQas=" alt="Car Slot 4" class="car-image">
                    <h3>Slot 4</h3>
                    <p>Available</p>
                </div>
                <div class="back">
                    <h3>Details</h3>
                    <p>Price: 15</p>
                    <p>Duration: 4 hours</p>
                </div>
            </div>
        </div>
    </div>
<script>document.querySelectorAll('.parking-slot').forEach(slot => {
    slot.addEventListener('click', () => {
        // Logic for selecting the slot
        alert("Slot selected!");
    });
});
</script> 
   
    <%} else{%>
        <style>
          * {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

body {
    font-family: Arial, sans-serif;
    background-color: #f4f4f4;
}

/* Hero Section */
.hero {
    background-image: url('parking-bg.jpg');
    background-size: cover;
    background-position: center;
    height: 100vh;
    display: flex;
    align-items: center;
    justify-content: center;
}

.search-container {
    background: rgba(255, 255, 255, 0.8);
    padding: 20px;
    border-radius: 8px;
    display: flex;
    gap: 10px;
}

input[type="text"], input[type="datetime-local"] {
    padding: 10px;
    border-radius: 4px;
    border: 1px solid #ccc;
}

button {
    padding: 10px 20px;
    background-color: #007bff;
    border: none;
    color: white;
    border-radius: 4px;
    cursor: pointer;
}

button:hover {
    background-color: #0056b3;
}

/* Navigation Menu */
.sticky-nav {
    position: sticky;
    top: 0;
    background-color: white;
    padding: 10px 0;
    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
    z-index: 1000;
}

.sticky-nav ul {
    display: flex;
    justify-content: center;
    list-style-type: none;
}

.sticky-nav ul li {
    margin: 0 15px;
}

.sticky-nav ul li a {
    text-decoration: none;
    color: #333;
    font-weight: bold;
    transition: color 0.3s;
}

.sticky-nav ul li a:hover {
    color: #007bff;
}

/* Parking Map Section */
.parking-map {
    padding: 40px;
    text-align: center;
}

#map {
    height: 400px;
    background-color: #eee;
}

/* Deals Section */
.deals {
    padding: 40px;
    display: flex;
    justify-content: center;
    gap: 20px;
}

.deal-card {
    background-color: #fff;
    padding: 20px;
    border-radius: 8px;
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
    transition: transform 0.3s;
}

.deal-card:hover {
    transform: scale(1.05);
}

/* Testimonials Section */
.testimonials {
    padding: 40px;
    text-align: center;
}

.testimonial-carousel {
    display: flex;
    gap: 20px;
    overflow-x: scroll;
    padding: 20px;
}

.testimonial {
    background-color: #fff;
    padding: 20px;
    border-radius: 8px;
    min-width: 200px;
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
}

/* Footer */
footer {
    background-color: #333;
    color: white;
    padding: 20px;
    text-align: center;
}

.footer-links {
    margin-bottom: 20px;
}

.footer-links a {
    color: white;
    margin: 0 10px;
    text-decoration: none;
}

.footer-links a:hover {
    text-decoration: underline;
}

.social-icons img {
    width: 24px;
    margin: 0 10px;
}

.social-icons a:hover img {
    filter: brightness(0.8);
}

        </style>
        <link rel="stylesheet" href="/css/landing.css">
        <%- include("./partials/link") %>
        <%- include("./partials/nav") %>
    <!-- Hero Section -->
    <header class="hero-section text-white text-center">
        <div class="container glass-effect ">
            <h1>Welcome to Easy Parking</h1>
            <p>Find and book your parking spot easily and conveniently</p>
            <a href="#features" class="btn btn-primary btn-lg">Learn More</a>
        </div>
    </header>

    <!-- Features Section -->
    <section id="features" class="py-5">
        <div class="container">
            <div class="row text-center">
                <div class="col-md-4">
                    <i class="fas fa-car-alt fa-3x"></i>
                    <h3>Easy Booking</h3>
                    <p>Book your parking spot in just a few clicks.</p>
                </div>
                <div class="col-md-4">
                    <i class="fas fa-map-marker-alt fa-3x"></i>
                    <h3>Convenient Locations</h3>
                    <p>Find parking spots in the most convenient locations.</p>
                </div>
                <div class="col-md-4">
                    <i class="fas fa-dollar-sign fa-3x"></i>
                    <h3>Affordable Pricing</h3>
                    <p>Get the best rates for parking in your area.</p>
                </div>
            </div>
        </div>
    </section>

    <!-- About Section -->
    <section id="about" class="bg-light py-5">
        <div class="container">
            <h2 class="text-center">About Us</h2>
            <p class="text-center">Easy Parking is dedicated to making parking hassle-free. We provide an easy-to-use platform that allows users to find and book parking spots quickly and affordably.</p>
        </div>
    </section>

    <!-- Contact Section -->
    <section id="contact" class="py-5">
        <div class="container">
            <h2 class="text-center">Contact Us</h2>
            <p class="text-center">Have any questions or need support? Reach out to us!</p>
            <div class="row justify-content-center">
                <div class="col-md-6">
                    <form action="/submit-form" method="post">
                        <div class="mb-3">
                            <label for="name" class="form-label">Name</label>
                            <input type="text" class="form-control"name="name" id="name" placeholder="Your Name">
                        </div>
                        <div class="mb-3">
                            <label for="email" class="form-label">Email</label>
                            <input type="email" class="form-control"  name="email" id="email" placeholder="Your Email">
                        </div>
                        <div class="mb-3">
                            <label for="message" class="form-label">Message</label>
                            <textarea class="form-control" name="message" id="message" rows="3" placeholder="Your Message" style="color: #121212;"></textarea>
                        </div>
                        <button type="submit" class="btn btn-primary">Send Message</button>
                    </form>
                </div>
            </div>
        </div>
    </section>

    <footer class="text-center py-4">
        <p>&copy; 2024 Easy Parking. All rights reserved.</p>
    </footer>

  
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>

        <% } %>

<!-- <footer class="footer mt-auto py-3 bg-light">
    <div class="container">
        <span class="text-muted">© 2024 Your Company. All rights reserved.</span>
        <li><a class="dropdown-item" href="/user/logout">logout</a></li>
    </div>
</footer> -->

<!-- Bootstrap JS and dependencies -->
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
<script>
    ("#menu-toggle").click(function(e) {
        e.preventDefault();
        ("#wrapper").toggleClass("toggled");
    });

    document.getElementById('dark-mode-toggle').addEventListener('click', function() {
        document.body.classList.toggle('dark-mode');
    });

        document.addEventListener('DOMContentLoaded', function() {
            fetch('/api/statistics')
                .then(response => response.json())
                .then(data => {
                    // Prepare the data for charts
                    const months = [];
                    const revenue = [];
                    const userRoleDistribution = { Admin: 0, Users: 0, Visitors: 0 };
                    const taskStatusDistribution = { Pending: 0, InProgress: 0, Completed: 0 };
    
                    data.forEach(stat => {
                        months.push(stat.month);
                        revenue.push(stat.revenue);
    
                        if (userRoleDistribution[stat.userRole] !== undefined) {
                            userRoleDistribution[stat.userRole]++;
                        }
    
                        if (taskStatusDistribution[stat.taskStatus] !== undefined) {
                            taskStatusDistribution[stat.taskStatus]++;
                        }
                    });
    
                    // Update the Line Chart
                    new Chart(document.getElementById('lineChart').getContext('2d'), {
                        type: 'line',
                        data: {
                            labels: months,
                            datasets: [{
                                label: 'Revenue',
                                data: revenue,
                                backgroundColor: 'rgba(54, 162, 235, 0.2)',
                                borderColor: 'rgba(54, 162, 235, 1)',
                                borderWidth: 2
                            }]
                        },
                        options: {
                            responsive: true,
                            maintainAspectRatio: false
                        }
                    });
    
                    // Update the Pie Chart
                    new Chart(document.getElementById('pieChart').getContext('2d'), {
                        type: 'pie',
                        data: {
                            labels: Object.keys(userRoleDistribution),
                            datasets: [{
                                label: 'User Distribution',
                                data: Object.values(userRoleDistribution),
                                backgroundColor: [
                                    'rgba(255, 99, 132, 0.6)',
                                    'rgba(54, 162, 235, 0.6)',
                                    'rgba(255, 206, 86, 0.6)'
                                ],
                                borderWidth: 1
                            }]
                        },
                        options: {
                            responsive: true,
                            maintainAspectRatio: false
                        }
                    });
    
                    // Update the Bar Chart
                    new Chart(document.getElementById('barChart').getContext('2d'), {
                        type: 'bar',
                        data: {
                            labels: Object.keys(taskStatusDistribution),
                            datasets: [{
                                label: 'Tasks',
                                data: Object.values(taskStatusDistribution),
                                backgroundColor: 'rgba(153, 102, 255, 0.6)',
                                borderColor: 'rgba(153, 102, 255, 1)',
                                borderWidth: 1
                            }]
                        },
                        options: {
                            responsive: true,
                            maintainAspectRatio: false,
                            scales: {
                                y: {
                                    beginAtZero: true
                                }
                            }
                        }
                    });
                })
                .catch(error => console.error('Error fetching data:', error));
        });
   
    
</script>
</body>
</html>
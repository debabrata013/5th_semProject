


<nav class="navbar navbar-expand-lg navbar-dark bg-dark">
    <div class="container-fluid">
      <a class="navbar-brand" href="#">Easy Park</a>
      <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNavDarkDropdown" aria-controls="navbarNavDarkDropdown" aria-expanded="false" aria-label="Toggle navigation">
        <span class="navbar-toggler-icon"></span>
      </button>
      <div class="collapse navbar-collapse" id="navbarNavDarkDropdown">
        <% if (locals.user) { %>
        <!-- <ul class="navbar-nav">
          <li class="nav-item dropdown">
            <button class="btn btn-dark dropdown-toggle" data-bs-toggle="dropdown" aria-expanded="false">
                <div class="circular--portrait"> <img src="<%=  JSON.stringify(user.profileImageURL)  %> "/>hello<%=  JSON.stringify(user.fullName)  %> </div>
            </button>
            <ul class="dropdown-menu dropdown-menu-dark">
              <li><a class="dropdown-item" href="/user/logout">logout</a></li>
              <li><a class="dropdown-item" href="#">Another action</a></li>
              <li><a class="dropdown-item" href="#">Something else here</a></li>
            </ul>
          </li>

        </ul> -->
        
          <nav class="navbar navbar-expand-lg navbar-dark bg-dark">
              <div class="container-fluid">
                  <a class="navbar-brand" href="#">User Dashboard</a>
                  <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
                      <span class="navbar-toggler-icon"></span>
                  </button>
                  <div class="collapse navbar-collapse" id="navbarNav">
                      <ul class="navbar-nav me-auto">
                          <li class="nav-item">
                           
                           <li class="nav-item">
                             <div class="circular--portrait">
                                  <img  src="<%=  user.profileImgURL  %>" alt="Profile" class="profile-pic">
                             </div>

                          </li>
                          <li class="nav-item">
                              <a class="nav-link" href="/booking">Booking</a>
                          </li>
                          
                          <li><a class="nav-item btn btn-danger" href="/user/logout">logout</a></li>
                      </ul>
                     
                  </div>
              </div>
          </nav>
      
        <% } else{%>
           
            <ul class="navbar-nav">
            <li calss="btn-custom btn-signup"style=" background-color: #28a745;
    color: white; margin-left:20px;"><a href="/user/signup" style="background-color: #28a745;
    color: white; width:30px; height :30px; margin:20px;text-decoration:none;">Signup</a></li>

            <li calss="btn-custom btn-login" style=" background-color: #007bff;
    color: white; margin-left:20px;"><a href="/user/signin" style="color: #fff; width:30px; height :30px; margin:20px;text-decoration:none;">Signin</a></li>
            </ul>
            <%}%>
      </div>
    </div>
  </nav>
  <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
<!-- <script>
    $("#menu-toggle").click(function(e) {
        e.preventDefault();
        $("#wrapper").toggleClass("toggled");
    });

    document.getElementById('dark-mode-toggle').addEventListener('click', function() {
        document.body.classList.toggle('dark-mode');
    });

        document.addEventListener('DOMContentLoaded', function() {
            fetch('/api/statistics')
                .then(response => response.json())
                .then(data => {
              
                    const months = [];
                    const revenue = [];
                    const userRoleDistribution = { Admin: 0, Users: 0, Visitors: 0 };
                    const taskStatusDistribution = { Pending: 0, InProgress: 0, Completed: 0 };
                    document.getElementById('totalUsers').innerText = data.totalUsers;

                    data.forEach(stat => {
                        months.push(stat.month);
                        revenue.push(stat.revenue);
    
                        if (userRoleDistribution[stat.userRole] !== undefined) {
                            userRoleDistribution[stat.userRole]++;
                        }
    
                        if (taskStatusDistribution[stat.taskStatus] !== undefined) {
                            taskStatusDistribution[stat.taskStatus]++;
                        }
                    });
    
                
                    new Chart(document.getElementById('lineChart').getContext('2d'), {
                        type: 'line',
                        data: {
                            labels: months,
                            datasets: [{
                                label: 'Revenue',
                                data: revenue,
                                backgroundColor: 'rgba(54, 162, 235, 0.2)',
                                borderColor: 'rgba(54, 162, 235, 1)',
                                borderWidth: 2
                            }]
                        },
                        options: {
                            responsive: true,
                            maintainAspectRatio: false
                        }
                    });
    
                  
                    new Chart(document.getElementById('pieChart').getContext('2d'), {
                        type: 'pie',
                        data: {
                            labels: Object.keys(userRoleDistribution),
                            datasets: [{
                                label: 'User Distribution',
                                data: Object.values(userRoleDistribution),
                                backgroundColor: [
                                    'rgba(255, 99, 132, 0.6)',
                                    'rgba(54, 162, 235, 0.6)',
                                    'rgba(255, 206, 86, 0.6)'
                                ],
                                borderWidth: 1
                            }]
                        },
                        options: {
                            responsive: true,
                            maintainAspectRatio: false
                        }
                    });
    
                  
                    new Chart(document.getElementById('barChart').getContext('2d'), {
                        type: 'bar',
                        data: {
                            labels: Object.keys(taskStatusDistribution),
                            datasets: [{
                                label: 'Tasks',
                                data: Object.values(taskStatusDistribution),
                                backgroundColor: 'rgba(153, 102, 255, 0.6)',
                                borderColor: 'rgba(153, 102, 255, 1)',
                                borderWidth: 1
                            }]
                        },
                        options: {
                            responsive: true,
                            maintainAspectRatio: false,
                            scales: {
                                y: {
                                    beginAtZero: true
                                }
                            }
                        }
                    });
                })
                .catch(error => console.error('Error fetching data:', error));
        });
   
    
</script> -->